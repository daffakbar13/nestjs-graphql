# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  i_id: Float
  n_role: String!
  d_createdAt: DateTime
  d_updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type RoleModel {
  count: Float!
  rows: [Role]
}

type PaymentMethod {
  i_id: Float!
  i_createdByUserId: Float!
  i_updatedByUserId: Float!
  i_deletedByUserId: Float
  n_accountName: String!
  n_accountNumber: String!
  n_paymentMethod: String!
  d_createdAt: DateTime!
  d_updatedAt: DateTime!
  d_deletedAt: DateTime
  createadBy: UserModel!
  updatedBy: UserModel!
  deletedBy: UserModel!
}

type PaymentMethodModel {
  count: Float!
  rows: [PaymentMethod]
}

type SellingProduct {
  i_id: Float!
  i_sellingId: Float!
  n_product: String!
  n_brand: String!
  n_quantity: Float!
  n_price: Float!
  total: Float!
  n_photo: String!
}

type Selling {
  i_id: Float!
  i_usersId: Float!
  i_sellingAddressId: Float!
  i_paymentId: Float!
  n_invoice: String!
  n_grandTotal: String!
  n_status: String!
  d_createdAt: DateTime!
}

type SellingModel {
  count: Float!
  rows: [Selling]
}

type User {
  i_id: Float
  i_rolesId: Float!
  n_name: String!
  n_email: String!
  c_active: Boolean!
  d_createdAt: DateTime
  d_updatedAt: DateTime
  d_lastLoginAt: DateTime
  d_deletedAt: DateTime
  role: RoleModel!
  brandCreated: BrandModel!
  brandUpdated: BrandModel!
  brandDeleted: BrandModel!
}

type UserModel {
  count: Float
  rows: [User]
}

type Brand {
  i_id: Float!
  i_createdByUserId: Float!
  i_updatedByUserId: Float!
  i_deletedByUserId: Float
  n_brand: String!
  n_photo: String!
  c_active: Boolean!
  d_createdAt: DateTime!
  d_updatedAt: DateTime!
  products: ProductModel!
  createadBy: UserModel!
  updatedBy: UserModel!
  deletedBy: UserModel!
}

type BrandModel {
  count: Float!
  rows: [Brand]
}

type ProductStatus {
  i_id: Float!
  n_status: String!
  d_createdAt: DateTime!
  d_updatedAt: DateTime!
  products: ProductModel!
}

type ProductStatusModel {
  count: Float!
  rows: [ProductStatus]
}

type Product {
  i_id: Float!
  i_createdByUserId: Float!
  i_updatedByUserId: Float!
  i_deletedByUserId: Float
  i_brandId: Float!
  i_productStatusId: Float!
  n_product: String!
  n_stock: Float!
  n_price: Float!
  n_photo: String!
  d_scheduleTime: DateTime
  d_createdAt: DateTime!
  d_updatedAt: DateTime!
  d_deletedAt: DateTime
  brand: BrandModel!
  status: ProductStatusModel!
  createadBy: UserModel!
  updatedBy: UserModel!
  deletedBy: UserModel!
}

type ProductModel {
  count: Float!
  rows: [Product]
}

type Token {
  token: String!
}

type Query {
  product(options: Options, filter: FilterProduct): ProductModel!
  productStatus(options: Options, filter: FilterProductStatus): ProductStatusModel!
  brands(options: Options, filter: FilterBrand): BrandModel!
  Selling(options: Options, filter: FilterSelling): SellingModel!
  PaymentMethods(options: Options, filter: FilterPaymentMethod): PaymentMethodModel!
}

input Options {
  limit: Float
  offset: Float
  orderBy: OrderBy
}

input OrderBy {
  ascending: [String]
  descending: [String]
}

input FilterProduct {
  i_id: Float
  i_brandId: Float
  i_productStatusId: Float
  n_product: String
  n_stock: Float
  n_price: Float
  n_photo: String
  d_createdAt: DateTime
  d_updatedAt: DateTime
  d_deletedAt: DateTime
}

input FilterProductStatus {
  i_id: Float
  n_status: String
  d_createdAt: DateTime
  d_updatedAt: DateTime
  d_deletedAt: DateTime
}

input FilterBrand {
  i_id: Float
  i_createdByUserId: Float
  i_updatedByUserId: Float
  i_deletedByUserId: Float
  n_brand: String
  n_photo: String
  c_active: String
  d_createdAt: DateTime
  d_updatedAt: DateTime
}

input FilterSelling {
  i_id: Float
  n_accountName: String!
  n_accountNumber: String!
  n_SellingMethod: String!
  d_createdAt: DateTime
  d_updatedAt: DateTime
  d_deletedAt: DateTime
}

input FilterPaymentMethod {
  i_id: Float
  i_createdByUserId: Float
  i_updatedByUserId: Float
  i_deletedByUserId: Float
  n_accountName: String
  n_accountNumber: String
  n_paymentMethod: String
  d_createdAt: DateTime
  d_updatedAt: DateTime
  d_deletedAt: DateTime
}

type Mutation {
  createProduct(createProduct: CreateProduct!): ProductModel!
  updateProduct(updateProduct: UpdateProduct!): ProductModel!
  removeProduct(id: Float!): ProductModel!
  createProductStatus(createProductStatus: CreateProductStatus!): ProductStatusModel!
  updateProductStatus(updateProduct: UpdateProductStatus!): ProductStatusModel!
  removeProductStatus(id: Float!): ProductStatusModel!
  registerCustomer(register: RegisterUser!): UserModel!
  registerAdmin(register: RegisterUser!): UserModel!
  registerSuperAdmin(register: RegisterUser!): UserModel!
  login(login: LoginDto!): Token!
  createBrand(createBrand: CreateBrand!): BrandModel!
  updateBrand(updateBrand: UpdateBrand!): BrandModel!
  removeBrand(id: Float!): BrandModel!
  createSelling(createSelling: CreateSelling!): SellingModel!
  updateSelling(updateSelling: UpdateSelling!): SellingModel!
  removeSelling(id: Float!): SellingModel!
  createPaymentMethod(createPaymentMethod: CreatePaymentMethod!): PaymentMethodModel!
  updatePaymentMethod(updatePaymentMethod: UpdatePaymentMethod!): PaymentMethodModel!
  removePaymentMethod(id: Float!): PaymentMethodModel!
}

input CreateProduct {
  i_brandId: Float!
  i_productStatusId: Float!
  n_product: String!
  n_stock: Float!
  n_price: Float!
  n_photo: String!
  d_scheduleTime: DateTime
}

input UpdateProduct {
  i_brandId: Float
  i_productStatusId: Float
  n_product: String
  n_stock: Float
  n_price: Float
  n_photo: String
  d_scheduleTime: DateTime
  id: Float!
}

input CreateProductStatus {
  n_status: String!
}

input UpdateProductStatus {
  n_status: String
  id: Float!
}

input RegisterUser {
  email: String!
  password: String!
  name: String!
}

input LoginDto {
  email: String!
  password: String!
}

input CreateBrand {
  n_brand: String!
  n_photo: String!
  c_active: Boolean!
}

input UpdateBrand {
  n_brand: String
  n_photo: String
  c_active: Boolean
  id: Float!
}

input CreateSelling {
  i_sellingAddressId: Float!
  i_paymentId: Float!
  n_invoice: String!
  n_grandTotal: Float!
  n_status: String!
}

input UpdateSelling {
  i_sellingAddressId: Float
  i_paymentId: Float
  n_invoice: String
  n_grandTotal: Float
  n_status: String
  id: Float!
}

input CreatePaymentMethod {
  n_accountName: String!
  n_accountNumber: String!
  n_paymentMethod: String!
}

input UpdatePaymentMethod {
  n_accountName: String
  n_accountNumber: String
  n_paymentMethod: String
  id: Float!
}